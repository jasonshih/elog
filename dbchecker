#!/usr/bin/env python
# -*- Mode: Python; tab-width: 4; py-indent-offset: 4; -*-

from elogapi import getdb

def check_exper_links(db):
    print "\nChecking for expers without hyperlinks (invisible expers)\n"

    # find all exper's that don't have a hyperlink in a note field
    expers = db.query("""SELECT exper,animal,date FROM """
                      """ exper ORDER BY experID""")
    for ex in expers:
        link = "<elog:exper=%s/%s>" % (ex['date'], ex['exper'])
        if int(ex['exper'][-4:]) > 0:
            rows = db.query("""SELECT sessionID,animal FROM session """
                            """ WHERE (note LIKE '%%%s%%') AND """
                            """ (date='%s')""" % (link, ex['date'],))
            if len(rows) == 0:
                note = db.query("""SELECT note FROM exper """
                                """ WHERE exper='%s' AND date='%s'""" %
                                (ex['exper'], ex['date']))
                print 'missing exper link: %s' % (link,)

def find_duplicate_expers1(db):
    print "\nChecking for duplicate exper (not necessarily a problem)\n"

    rows = db.query("""SELECT experID,exper FROM exper ORDER BY experID""")

    dups = {}

    for row in rows:
        if int(row['exper'][-4:]) <= 1:
            # ignore 0000 expers
            continue
        else:
            rows2 = db.query("""SELECT experID,date,exper FROM """
                             """ exper WHERE exper='%s'""" %
                             (row['exper'],))
            if len(rows2) > 1 and not dups.has_key(row['exper']):
                for n in range(len(rows2)):
                    print '%s%s/%s experID=%d (OK)' % \
                          (n*' ', \
                           rows2[n]['date'],row['exper'],rows2[n]['experID'])
                dups[rows2[n]['exper']] = 1

def find_duplicate_expers2(db):
    print "\nChecking for duplicate expers on same date\n"

    rows = db.query("""SELECT exper,date FROM exper ORDER BY experID""")

    dups = {}

    for row in rows:
        if int(row['exper'][-4:]) <= 1:
            # ignore 0000 expers
            continue
        else:
            rows2 = db.query("""SELECT experID FROM exper WHERE """
                             """  exper='%s' AND date='%s' """ %
                             (row['exper'], row['date']))
            if len(rows2) > 1 and not dups.has_key(row['exper']):
                for n in range(len(rows2)):
                    print '%s%s/%s experID=%d (FATAL!)' % \
                          (n*' ', \
                           row['date'],row['exper'],rows2[n]['experID'])
                print ''
                dups[row['exper']] = 1

if __name__ == '__main__':
    db = getdb()
    check_exper_links(db)
    find_duplicate_expers1(db)
    find_duplicate_expers2(db)
    db.close()
